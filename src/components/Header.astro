---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
// SearchModal is loaded on demand to avoid shipping React vendor at startup
// import SearchModal from './SearchModal.tsx';
import { BookOpenText, FolderKanban, FileText, Mic2, User2 } from 'lucide-astro';

// Normalize current path to work with both `build.format: "file"` (e.g. "/talks.html")
// and directory-style paths (e.g. "/talks/"). This ensures active nav detection works.
let current = Astro.url.pathname
  // Map "/index.html" to root
  .replace(/\/index\.html$/, '/')
  // Strip any .html extension (e.g., "/talks.html" -> "/talks")
  .replace(/\.html$/, '')
  // Remove any trailing slashes
  .replace(/\/+$/, '') || '/';
const links = [
  { href: '/blog', label: 'Blog' },
  { href: '/projects', label: 'Projects' },
  { href: '/publications', label: 'Publications' },
  { href: '/talks', label: 'Talks' },
  { href: '/about', label: 'About' },
];

const isActive = (href: string) =>
  current === href || (href !== '/' && current.startsWith(href + '/'));
---

<header class="fixed inset-x-0 z-50" style="top: max(env(safe-area-inset-top), 1rem)">
  <div class="mx-auto w-full md:w-fit max-w-[min(92vw,72rem)]">
    <div class="relative block md:inline-flex w-full md:w-auto rounded-full p-[1px]
                bg-gradient-to-r from-[color:var(--white)]/15 via-transparent to-[color:var(--white)]/15">
      <nav id="site-nav" aria-label="Primary"
           class="flex w-full items-center justify-between md:justify-start gap-1 rounded-[inherit] border border-transparent
                  bg-transparent supports-[backdrop-filter]:bg-transparent
                  backdrop-blur-none shadow-none
                  transition-[background-color,box-shadow,transform,border-color,backdrop-filter] duration-200 ease-out
                  data-[scrolled=true]:border-[color:var(--white)]/10
                  data-[scrolled=true]:bg-[color:var(--black-nav)]/70 data-[scrolled=true]:supports-[backdrop-filter]:bg-[color:var(--black-nav)]/55
                  data-[scrolled=true]:backdrop-blur-md data-[scrolled=true]:shadow-lg data-[scrolled=true]:shadow-black/10
                  overflow-x-auto overscroll-x-contain scrollbar-none
                  snap-x snap-proximity md:snap-none p-2">
        <a href="/" aria-label="Go to homepage"
           class="group text-[color:var(--white)] flex min-w-0 gap-2 items-center rounded-full px-3 py-2
                  hover:bg-[color:var(--white)]/5 transition-colors focus-visible:outline-none
                  focus-visible:ring-2 focus-visible:ring-[color:var(--white)]/30 snap-start nav-link">
          <svg class="h-6 w-6 shrink-0 transition-transform motion-safe:group-hover:scale-105" 
               viewBox="0 0 512 512" fill="none" aria-hidden="true">
            <!-- Blue background (site brand color) -->
            <rect x="0" y="0" width="512" height="512" rx="64" fill="#6AC1FF"/>
            <!-- PP Logo in dark color -->
            <g fill="#222831">
              <path d="M82 199.1L291.4 199.1L291.4 298.1C291.4 311.1 288.6 322.3 283 331.7C277.4 341.3 269.5 348.7 259.3 353.9C249.3 359.1 237.7 361.7 224.5 361.7C211.3 361.7 199.7 359.1 189.7 353.9C179.7 348.7 171.8 341.3 166 331.7C160.4 322.3 157.6 311.1 157.6 298.1L157.6 244.7L82 244.7L82 199.1ZM197.2 244.7L197.2 292.7C197.2 297.3 198 301.2 199.6 304.4C201.2 307.6 203.5 310.1 206.5 311.9C209.7 313.7 213.5 314.6 217.9 314.6L231.1 314.6C235.7 314.6 239.5 313.7 242.5 311.9C245.5 310.1 247.8 307.6 249.4 304.4C251 301.2 251.8 297.3 251.8 292.7L251.8 244.7L197.2 244.7Z"/>
              <path d="M291 199.1L500.4 199.1L500.4 298.1C500.4 311.1 497.6 322.3 492 331.7C486.4 341.3 478.5 348.7 468.3 353.9C458.3 359.1 446.7 361.7 433.5 361.7C420.3 361.7 408.7 359.1 398.7 353.9C388.7 348.7 380.8 341.3 375 331.7C369.4 322.3 366.6 311.1 366.6 298.1L366.6 244.7L291 244.7L291 199.1ZM406.2 244.7L406.2 292.7C406.2 297.3 407 301.2 408.6 304.4C410.2 307.6 412.5 310.1 415.5 311.9C418.7 313.7 422.5 314.6 426.9 314.6L440.1 314.6C444.7 314.6 448.5 313.7 451.5 311.9C454.5 310.1 456.8 307.6 458.4 304.4C460 301.2 460.8 297.3 460.8 292.7L460.8 244.7L406.2 244.7Z"/>
            </g>
          </svg>
          <span class="hidden md:inline whitespace-nowrap md:ml-1 font-medium max-w-[40vw] truncate">
            {SITE_TITLE}
          </span>
        </a>

        <!-- Desktop nav -->
        <ul class="ml-3 sm:ml-4 md:ml-6 hidden md:flex items-center gap-1">
            {links.map(({ href, label }) => (
              <li>
                <HeaderLink href={href} isActive={isActive(href)} ariaLabel={label} class="snap-start nav-link">
                  <span class="inline-flex items-center gap-1.5">
                    {isActive(href) && (
                    <>
                      {label === 'Blog' && (<BookOpenText class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
                      {label === 'Projects' && (<FolderKanban class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
                      {label === 'Publications' && (<FileText class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
                      {label === 'Talks' && (<Mic2 class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
                      {label === 'About' && (<User2 class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
                    </>
                  )}
                  <span class="inline whitespace-nowrap">{label}</span>
                </span>
              </HeaderLink>
            </li>
          ))}
        </ul>

        <!-- Actions -->
        <div class="ml-2 md:ml-3 flex items-center gap-1">
          <!-- Progressive Search: load React modal on demand -->
          <button
            id="open-search-desktop"
            class="hidden md:inline-flex items-center gap-2 rounded-full px-3 py-2 text-sm hover:bg-[color:var(--white)]/5 transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--white)]/30"
            aria-label="Open search"
            title="Search (âŒ˜/Ctrl + K)"
            type="button"
          >
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true"><circle cx="11" cy="11" r="8"/><path d="m21 21-4.3-4.3"/></svg>
            <span class="opacity-90">Search</span>
            <span class="ml-2 hidden lg:inline-flex items-center gap-1 rounded-md border border-white/10 px-1.5 py-0.5 text-xs text-white/70">
              <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true"><path d="M18 8a6 6 0 0 1-6 6"/><path d="M5 19v-7a2 2 0 0 1 2-2h7"/></svg>K
            </span>
          </button>
          <button
            id="open-search-mobile"
            class="md:hidden inline-flex items-center justify-center rounded-full p-2 hover:bg-[color:var(--white)]/10 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--white)]/30"
            aria-label="Open search"
            title="Search"
            type="button"
          >
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true"><circle cx="11" cy="11" r="8"/><path d="m21 21-4.3-4.3"/></svg>
          </button>
          <!-- Mobile menu toggle -->
          <button id="menu-toggle"
                  class="md:hidden inline-flex items-center justify-center rounded-full p-2 text-[color:var(--white)]/85
                         hover:text-[color:var(--white)] hover:bg-[color:var(--white)]/5 transition-colors
                         focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--white)]/30"
                  aria-label="Open menu" aria-controls="mobile-menu" aria-expanded="false">
            <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
        </div>

      </nav>

      <!-- Mobile menu panel -->
      <div id="mobile-menu"
           class="md:hidden pointer-events-none absolute left-1/2 top-full z-40 w-[min(92vw,72rem)] -translate-x-1/2 pt-2 opacity-0
                  transition-opacity duration-200 ease-out">
        <div class="rounded-2xl border border-[color:var(--white)]/10 shadow-xl shadow-black/10
                    bg-[color:var(--black-nav)]/80 supports-[backdrop-filter]:bg-[color:var(--black-nav)]/60 backdrop-blur-md">
          <ul class="py-1">
            {links.map(({ href, label }) => (
              <li>
                <a href={href}
                   class={`flex items-center gap-2 px-3 py-3 text-sm font-medium min-h-[44px]
                          text-[color:var(--white)]/85 hover:text-[color:var(--white)]
                          hover:bg-[color:var(--white)]/5 transition-colors focus-visible:outline-none
                          focus-visible:ring-2 focus-visible:ring-[color:var(--white)]/30
                          ${isActive(href) ? 'bg-[color:var(--white)]/10 text-[color:var(--white)] shadow-inner pointer-events-none cursor-default' : ''}`}
                   data-active={isActive(href) ? 'true' : undefined}
                   aria-current={isActive(href) ? 'page' : undefined}
                   tabindex={isActive(href) ? -1 : undefined}>
                  {label === 'Blog' && (<BookOpenText class="h-4 w-4 opacity-80" aria-hidden="true" />)}
                  {label === 'Projects' && (<FolderKanban class="h-4 w-4 opacity-80" aria-hidden="true" />)}
                  {label === 'Publications' && (<FileText class="h-4 w-4 opacity-80" aria-hidden="true" />)}
                  {label === 'Talks' && (<Mic2 class="h-4 w-4 opacity-80" aria-hidden="true" />)}
                  {label === 'About' && (<User2 class="h-4 w-4 opacity-80" aria-hidden="true" />)}
                  <span>{label}</span>
                </a>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import { openSearch } from '../scripts/openSearch';

  const nav = document.getElementById('site-nav');
  const menu = document.getElementById('mobile-menu');
  const toggle = document.getElementById('menu-toggle');
  // rAF-throttled scroll handler: separate read (scrollY) from write (dataset)
  let ticking = false;
  const readState = () => (window.scrollY > 6 ? 'true' : 'false');
  const writeState = (value: 'true' | 'false') => {
    if (!nav) return;
    if (nav.dataset.scrolled !== value) nav.dataset.scrolled = value;
  };
  const schedule = () => {
    if (ticking) return;
    ticking = true;
    requestAnimationFrame(() => {
      const value = readState(); // READS
      writeState(value); // WRITES
      ticking = false;
    });
  };
  // Initial state
  requestAnimationFrame(schedule);
  window.addEventListener('scroll', schedule, { passive: true });

  // Mobile menu toggle
  const setMenuOpen = (open: boolean) => {
    if (!menu || !toggle) return;
    toggle.setAttribute('aria-expanded', open ? 'true' : 'false');
    toggle.setAttribute('aria-label', open ? 'Close menu' : 'Open menu');
    if (open) {
      menu.classList.remove('opacity-0', 'pointer-events-none');
      menu.classList.add('opacity-100', 'pointer-events-auto');
    } else {
      menu.classList.add('opacity-0', 'pointer-events-none');
      menu.classList.remove('opacity-100', 'pointer-events-auto');
    }
  };
  let isOpen = false;
  if (toggle) {
    toggle.addEventListener('click', () => {
      isOpen = !isOpen;
      setMenuOpen(isOpen);
    });
  }
  // Close on navigation
  if (menu) {
    menu.addEventListener('click', (e: Event) => {
      const t = e.target as HTMLElement | null;
      if (t && t.tagName === 'A') {
        isOpen = false;
        setMenuOpen(false);
      }
    });
  }

  // Light prefetch of search index on intent (hover/focus/shortcut)
  // Keeps initial JS light (SearchModal hydrates on idle), but makes first open snappy.
  let prefetched = false;
  const prefetchSearch = () => {
    if (prefetched) return;
    prefetched = true;
    try {
      // Respect Data Saver
      // @ts-ignore
      if (navigator?.connection?.saveData) return;
    } catch {}
    try { fetch('/search.json').catch(() => {}); } catch {}
  };
  // Prefetch on pointer intent and focus of any search trigger
  const triggers = document.querySelectorAll('button[aria-label="Open search"]');
  triggers.forEach((t) => {
    t.addEventListener('mouseenter', prefetchSearch, { once: true, passive: true });
    t.addEventListener('focus', prefetchSearch, { once: true });
    t.addEventListener('touchstart', prefetchSearch, { once: true, passive: true });
  });
  // Prefetch when user tries the shortcut early
  window.addEventListener('keydown', (e) => {
    if ((e.ctrlKey || e.metaKey) && e.key.toLowerCase() === 'k') prefetchSearch();
  }, { passive: true });

  // On-demand load for SearchModal (React) to avoid shipping React on initial load
  const desktopBtn = document.getElementById('open-search-desktop');
  const mobileBtn = document.getElementById('open-search-mobile');
  desktopBtn?.addEventListener('click', openSearch);
  mobileBtn?.addEventListener('click', openSearch);
  window.addEventListener('keydown', (e) => {
    if ((e.ctrlKey || e.metaKey) && e.key.toLowerCase() === 'k') {
      e.preventDefault();
      openSearch();
    }
  });
</script>
