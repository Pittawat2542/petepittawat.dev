---
import type { SeriesNavigation } from '../lib/series';
import { ChevronLeft, ChevronRight, BookOpen, List } from 'lucide-astro';

interface Props {
  seriesNav: SeriesNavigation;
}

const { seriesNav } = Astro.props;
const { series, current, previousPost, nextPost } = seriesNav;

// Calculate current position
const currentIndex = series.posts.findIndex(post => post.slug === current.slug);
const currentPart = currentIndex + 1;
const progress = Math.round((currentPart / series.totalParts) * 100);
---

<aside class="series-navigation not-prose my-8 rounded-xl border border-[color:var(--accent)]/30 bg-[color:var(--accent)]/[0.08] p-6">
  <!-- Series Header -->
  <div class="mb-4">
    <div class="flex items-center gap-2 mb-2">
      <BookOpen class="h-5 w-5 text-[color:var(--accent)]" />
      <h3 class="text-lg font-semibold text-[color:var(--accent)]">Series</h3>
    </div>
    <h4 class="text-xl font-bold mb-2">{series.title}</h4>
    {series.description && (
      <p class="text-sm text-[color:var(--white)]/70 mb-3">{series.description}</p>
    )}
    
    <!-- Progress -->
    <div class="flex items-center gap-3 text-sm">
      <span class="text-[color:var(--white)]/80">
        Part {currentPart} of {series.totalParts}
      </span>
      <div class="flex-1 bg-[color:var(--white)]/20 rounded-full h-2">
        <div 
          class="bg-[color:var(--accent)] h-2 rounded-full transition-all duration-300"
          style={`width: ${progress}%`}
        ></div>
      </div>
      <span class="text-[color:var(--white)]/60 font-medium">{progress}%</span>
    </div>
  </div>

  <!-- Navigation Buttons -->
  <div class="flex justify-between mb-6">
    {previousPost ? (
      <a 
        href={`/blog/${previousPost.slug}`}
        class="flex items-center gap-2 px-4 py-2 rounded-lg bg-[color:var(--accent)]/20 hover:bg-[color:var(--accent)]/30 text-[color:var(--accent)] transition-colors duration-200 text-sm font-medium"
      >
        <ChevronLeft class="h-4 w-4" />
        Previous
      </a>
    ) : (
      <div class="flex items-center gap-2 px-4 py-2 rounded-lg bg-[color:var(--white)]/10 text-[color:var(--white)]/40 text-sm font-medium cursor-not-allowed">
        <ChevronLeft class="h-4 w-4" />
        Previous
      </div>
    )}

    {nextPost ? (
      <a 
        href={`/blog/${nextPost.slug}`}
        class="flex items-center gap-2 px-4 py-2 rounded-lg bg-[color:var(--accent)]/20 hover:bg-[color:var(--accent)]/30 text-[color:var(--accent)] transition-colors duration-200 text-sm font-medium"
      >
        Next
        <ChevronRight class="h-4 w-4" />
      </a>
    ) : (
      <div class="flex items-center gap-2 px-4 py-2 rounded-lg bg-[color:var(--white)]/10 text-[color:var(--white)]/40 text-sm font-medium cursor-not-allowed">
        Next
        <ChevronRight class="h-4 w-4" />
      </div>
    )}
  </div>

  <!-- Series Table of Contents -->
  <details class="group">
    <summary class="flex items-center gap-2 cursor-pointer text-sm font-medium text-[color:var(--accent)] hover:text-[color:var(--accent)]/80 transition-colors">
      <List class="h-4 w-4" />
      All parts in this series
      <ChevronRight class="h-4 w-4 transition-transform group-open:rotate-90" />
    </summary>
    
    <div class="mt-4 space-y-2">
      {series.posts.map((post, index) => {
        const partNumber = index + 1;
        const isCurrent = post.slug === current.slug;
        const isCompleted = index < currentIndex;
        
        return (
          <div 
            class={`flex items-center gap-3 p-2 rounded-lg transition-colors ${
              isCurrent 
                ? 'bg-[color:var(--accent)]/20 border border-[color:var(--accent)]/40' 
                : 'hover:bg-[color:var(--white)]/5'
            }`}
          >
            <div 
              class={`flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${
                isCurrent
                  ? 'bg-[color:var(--accent)] text-[color:var(--bg)]'
                  : isCompleted
                  ? 'bg-[color:var(--accent)]/60 text-[color:var(--bg)]'
                  : 'bg-[color:var(--white)]/20 text-[color:var(--white)]/70'
              }`}
            >
              {partNumber}
            </div>
            
            {isCurrent ? (
              <span class="flex-1 font-medium text-[color:var(--accent)]">
                {post.data.title}
              </span>
            ) : (
              <a 
                href={`/blog/${post.slug}`}
                class="flex-1 hover:text-[color:var(--accent)] transition-colors text-sm"
              >
                {post.data.title}
              </a>
            )}
            
            {isCurrent && (
              <span class="text-xs text-[color:var(--accent)]/80 font-medium px-2 py-1 bg-[color:var(--accent)]/10 rounded-full">
                Current
              </span>
            )}
          </div>
        );
      })}
    </div>
  </details>
</aside>

<style>
  .series-navigation {
    /* Ensure it stands out from the prose content */
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
</style>
