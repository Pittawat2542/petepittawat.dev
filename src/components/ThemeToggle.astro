---
const label = 'Toggle theme';
---

<button
  type="button"
  aria-label={label}
  id="theme-toggle"
  class="relative inline-flex h-9 w-9 items-center justify-center
         rounded-full border border-[color:var(--white)]/12
         text-[color:var(--white)]/90 hover:text-[color:var(--accent)]
         hover:border-[color:var(--accent)]/70
         bg-white/0 hover:bg-white/5
         focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--accent)]/40
         transition-[color,border,background] duration-200"
  aria-pressed="false"
  title="Switch theme"
>
  <!-- sun -->
  <svg viewBox="0 0 24 24" class="sun h-5 w-5" fill="currentColor" aria-hidden="true">
    <path d="M12 18a6 6 0 1 0 0-12 6 6 0 0 0 0 12ZM12 2a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1Zm0 17a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0v-1a1 1 0 0 1 1-1Zm10-7a1 1 0 0 1-1 1h-1a1 1 0 1 1 0-2h1a1 1 0 0 1 1 1ZM4 12a1 1 0 0 1-1 1H2a1 1 0 1 1 0-2h1a1 1 0 0 1 1 1Zm14.95 6.364a1 1 0 0 1-1.415 0l-.707-.707a1 1 0 1 1 1.415-1.415l.707.707a1 1 0 0 1 0 1.415ZM6.172 6.172A1 1 0 0 1 4.757 4.757l.707-.707A1 1 0 1 1 6.879 5.465l-.707.707Zm12.021-1.415a1 1 0 0 1 0 1.415l-.707.707A1 1 0 1 1 16.071 5.464l.707-.707a1 1 0 0 1 1.415 0ZM7.293 17.293a1 1 0 1 1 1.414 1.414l-.707.707a1 1 0 0 1-1.414-1.414l.707-.707Z"/>
  </svg>

  <!-- moon -->
  <svg viewBox="0 0 24 24" class="moon absolute h-5 w-5" fill="currentColor" aria-hidden="true">
    <path d="M21.752 15.002A9.718 9.718 0 0 1 12 21.75C6.615 21.75 2.25 17.385 2.25 12
      c0-4.272 2.748-7.9 6.58-9.219.47-.165.948.23.822.713A7.5 7.5 0 0 0 12 17.25
      a7.5 7.5 0 0 0 7.256-5.651c.126-.482.694-.676 1.06-.322a9.72 9.72 0 0 1 1.436 3.725Z"/>
  </svg>

  <!-- soft inner highlight -->
  <span class="pointer-events-none absolute inset-0 rounded-full
               shadow-[inset_0_1px_0_rgba(255,255,255,0.06)]"></span>
</button>

<style is:inline>
  .sun,.moon{transition:opacity .25s ease,transform .25s ease}
  [data-state="light"] .moon,[data-state="dark"] .sun{opacity:0;transform:scale(.85) rotate(-15deg)}
  @media (prefers-reduced-motion: reduce){.sun,.moon{transition:none}}
</style>

<script is:inline>
  (function () {
    const STORAGE_KEY = 'theme';
    const root = document.documentElement;
    const btn = document.getElementById('theme-toggle');
    const media = window.matchMedia('(prefers-color-scheme: light)');

    const systemTheme = () => (media.matches ? 'light' : 'dark');
    const saved = () => {
      const v = localStorage.getItem(STORAGE_KEY);
      return v === 'light' || v === 'dark' ? v : null;
    };
    const current = () => saved() ?? systemTheme();

    function apply(theme) {
      root.dataset.theme = theme;
      root.classList.toggle('dark', theme === 'dark');
      if (btn) {
        btn.dataset.state = theme;
        const dark = theme === 'dark';
        btn.setAttribute('aria-pressed', String(dark));
        const nextLabel = dark ? 'Switch to light mode' : 'Switch to dark mode';
        btn.setAttribute('aria-label', nextLabel);
        btn.title = nextLabel;
      }
    }

    // Initial paint
    apply(current());

    // Toggle click
    btn?.addEventListener('click', () => {
      const next = current() === 'light' ? 'dark' : 'light';
      localStorage.setItem(STORAGE_KEY, next);
      apply(next);
    });

    // Right-click to reset to system preference
    btn?.addEventListener('contextmenu', (e) => {
      e.preventDefault();
      localStorage.removeItem(STORAGE_KEY);
      apply(systemTheme());
    });

    // Follow OS changes if user is in "system" mode
    const onChange = () => { if (!saved()) apply(systemTheme()); };
    media.addEventListener?.('change', onChange);
    // Safari <16 fallback
    media.addListener?.(onChange);
  })();
</script>
