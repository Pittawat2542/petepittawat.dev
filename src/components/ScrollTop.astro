---
import { ArrowUp } from 'lucide-astro';
const label = 'Back to top';
---

<button
  id="scroll-top"
  aria-label={label}
  title="Scroll to top"
  class="fixed bottom-6 right-6 z-30 inline-flex items-center justify-center h-11 w-11 rounded-full glass-button bg-muted/20 border-muted/40 hover:bg-muted/30 hover:border-muted/60 text-[color:var(--white)] hover:text-[color:var(--accent)] shadow-md shadow-black/10
         transition-[opacity,transform,box-shadow,color,background-color,border-color] duration-200 ease-out will-change-transform
         active:scale-[0.98]"
  style="right: max(1.25rem, env(safe-area-inset-right)); bottom: max(1.25rem, env(safe-area-inset-bottom));"
  data-visible="false"
>
  <ArrowUp class="h-5 w-5" aria-hidden="true" />
</button>

<script>
  // Safari-compatible scroll to top implementation
  (function() {
    const btn = document.getElementById('scroll-top');
    if (!btn) return;
    
    let ticking = false;
    
    function updateScrollButton() {
      if (!btn) return;
      
      // Use both window.scrollY and document.documentElement.scrollTop for Safari compatibility
      const scrollY = window.scrollY || document.documentElement.scrollTop || document.body.scrollTop || 0;
      const show = scrollY > 200;
      
      // Force reflow by accessing offsetHeight (Safari sometimes needs this)
      btn.offsetHeight;
      
      if (show) {
        btn.setAttribute('data-visible', 'true');
        btn.style.opacity = '1';
        btn.style.transform = 'translateY(0)';
        btn.style.pointerEvents = 'auto';
      } else {
        btn.setAttribute('data-visible', 'false');
        btn.style.opacity = '0';
        btn.style.transform = 'translateY(0.5rem)';
        btn.style.pointerEvents = 'none';
      }
      
      ticking = false;
    }
    
    function onScroll() {
      if (!ticking) {
        requestAnimationFrame(updateScrollButton);
        ticking = true;
      }
    }
    
    // Safari-compatible smooth scroll
    function scrollToTop() {
      // Try modern API first
      if ('scrollTo' in window && 'behavior' in document.createElement('div').style) {
        try {
          window.scrollTo({ top: 0, behavior: 'smooth' });
          return;
        } catch (e) {
          // Fallback for older Safari versions
        }
      }
      
      // Fallback smooth scroll for older Safari
      const start = window.scrollY || document.documentElement.scrollTop || document.body.scrollTop || 0;
      const duration = 300;
      let startTime: number | null = null;
      
      function animateScroll(currentTime: number) {
        if (startTime === null) startTime = currentTime;
        const timeElapsed = currentTime - startTime;
        const progress = Math.min(timeElapsed / duration, 1);
        
        // Easing function
        const ease = 1 - Math.pow(1 - progress, 3);
        const position = start * (1 - ease);
        
        window.scrollTo(0, position);
        
        if (progress < 1) {
          requestAnimationFrame(animateScroll);
        }
      }
      
      requestAnimationFrame(animateScroll);
    }
    
    // Event listeners
    window.addEventListener('scroll', onScroll, { passive: true });
    
    // Handle both orientationchange (iOS) and resize events
    window.addEventListener('orientationchange', () => {
      setTimeout(onScroll, 100);
    }, { passive: true });
    
    window.addEventListener('resize', onScroll, { passive: true });
    
    btn.addEventListener('click', scrollToTop);
    
    // Initial call with delay to ensure page is fully loaded
    setTimeout(updateScrollButton, 100);
    
    // Also check on page visibility change (Safari iOS background/foreground)
    if ('visibilitychange' in document) {
      document.addEventListener('visibilitychange', () => {
        if (!document.hidden) {
          setTimeout(updateScrollButton, 50);
        }
      });
    }
  })();
</script>

<style is:inline>
  #scroll-top {
    opacity: 0;
    transform: translateY(0.5rem);
    pointer-events: none;
    /* Safari-specific optimizations */
    -webkit-transform: translateY(0.5rem);
    -webkit-transition: opacity 200ms ease-out, transform 200ms ease-out, -webkit-transform 200ms ease-out;
    transition: opacity 200ms ease-out, transform 200ms ease-out;
    /* Force hardware acceleration on Safari */
    -webkit-transform: translateZ(0) translateY(0.5rem);
    transform: translateZ(0) translateY(0.5rem);
    will-change: opacity, transform;
  }
  
  #scroll-top[data-visible="true"] {
    opacity: 1;
    transform: translateZ(0) translateY(0);
    -webkit-transform: translateZ(0) translateY(0);
    pointer-events: auto;
  }
  
  @media (prefers-reduced-motion: reduce) {
    #scroll-top {
      transition: none !important;
      -webkit-transition: none !important;
    }
  }
  
  /* Safari-specific fixes */
  @supports (-webkit-appearance: none) {
    #scroll-top {
      /* Ensure button appears correctly on Safari */
      -webkit-appearance: none;
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden;
    }
  }
</style>
