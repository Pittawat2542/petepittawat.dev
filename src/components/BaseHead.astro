---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: string;
	type?: 'website' | 'article';
	publishedTime?: string;
	tags?: string[];
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/home-og-image.jpeg', type = 'website', publishedTime, tags = [] } = Astro.props as Props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />
<meta name="theme-color" content="#111827" />

<!-- Performance: fonts preconnect -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

<!-- Performance: Google Fonts preload + non-blocking stylesheet -->
<link
  rel="preload"
  as="style"
  href="https://fonts.googleapis.com/css2?family=Anuphan:wght@100..700&family=Krub:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
/>
<link
  rel="stylesheet"
  href="https://fonts.googleapis.com/css2?family=Anuphan:wght@100..700&family=Krub:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
  media="print"
  onload="this.setAttribute('media','all')"
/>
<noscript>
  <link
    rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Anuphan:wght@100..700&family=Krub:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
  />
</noscript>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />
<link rel="alternate" type="application/rss+xml" title="RSS" href="/rss.xml" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.site ?? Astro.url)} />
<meta property="og:site_name" content={SITE_TITLE} />
{type === 'article' && publishedTime ? (
  <meta property="article:published_time" content={publishedTime} />
) : null}
{type === 'article' && Array.isArray(tags) ? (
  <>
    {tags.map((t) => (
      <meta property="article:tag" content={t} />
    ))}
  </>
) : null}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.site ?? Astro.url)} />
{
  import.meta.env.PUBLIC_TWITTER_HANDLE && (
    <>
      <meta name="twitter:site" content={import.meta.env.PUBLIC_TWITTER_HANDLE} />
      <meta name="twitter:creator" content={import.meta.env.PUBLIC_TWITTER_HANDLE} />
    </>
  )
}
