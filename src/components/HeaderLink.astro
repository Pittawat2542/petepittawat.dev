---
interface Props {
  href: string;
  class?: string;
  isActive?: boolean;
  ariaLabel?: string;
}
const { href, class: className = '', isActive = false, ariaLabel } = Astro.props;
---

<a
  href={href}
  aria-label={ariaLabel}
  aria-current={isActive ? 'page' : undefined}
  data-active={isActive ? 'true' : undefined}
  tabindex={isActive ? -1 : undefined}
  class={`rounded-full px-4 py-2 text-sm font-medium inline-flex items-center gap-1.5 leading-none nav-pill nav-link
          text-[color:var(--white)]/85 hover:text-[color:var(--white)]
          transition-colors duration-150 ease-out
          focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--white)]/30
          ${isActive ? 'bg-[color:var(--white)]/15 text-white shadow-inner shadow-lg pointer-events-none cursor-default' : 'cursor-pointer'}
          ${className}`}
>
  <slot />
</a>

<style>
  .nav-link {
    position: relative;
    overflow: hidden;
  }

  .nav-link::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    padding-bottom: 100%;
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    background-color: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.12);
    backdrop-filter: blur(12px);
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    z-index: -1;
  }

  .nav-link:hover::before {
    transform: translate(-50%, -50%) scale(1.5);
  }
</style>
