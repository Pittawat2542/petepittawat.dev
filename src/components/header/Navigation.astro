---
import HeaderLink from '../HeaderLink.astro';
import { BookOpenText, FolderKanban, FileText, Mic2, User2 } from 'lucide-astro';

export interface Props {
  currentPath: string;
  class?: string;
}

const { currentPath, class: className } = Astro.props;

const links = [
  { href: '/blog', label: 'Blog' },
  { href: '/projects', label: 'Projects' },
  { href: '/publications', label: 'Publications' },
  { href: '/talks', label: 'Talks' },
  { href: '/about', label: 'About' },
];

const isActive = (href: string) =>
  currentPath === href || (href !== '/' && currentPath.startsWith(href + '/'));
---

<ul class={`ml-3 sm:ml-4 md:ml-6 hidden md:flex items-center gap-1 ${className || ''}`}>
  {links.map(({ href, label }) => (
    <li>
      <HeaderLink href={href} isActive={isActive(href)} ariaLabel={label} class="snap-start nav-link">
        <span class="inline-flex items-center gap-1.5">
          {isActive(href) && (
          <>
            {label === 'Blog' && (<BookOpenText class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
            {label === 'Projects' && (<FolderKanban class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
            {label === 'Publications' && (<FileText class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
            {label === 'Talks' && (<Mic2 class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
            {label === 'About' && (<User2 class="h-4 w-4 opacity-80 shrink-0" aria-hidden="true" />)}
          </>
        )}
        <span class="inline whitespace-nowrap">{label}</span>
      </span>
    </HeaderLink>
  </li>
))}
</ul>