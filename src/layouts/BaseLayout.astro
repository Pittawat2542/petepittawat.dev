---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import ScrollTop from '../components/ScrollTop.astro';


const { title, description, image, type, publishedTime, tags } = Astro.props as {
  title: string;
  description: string;
  image?: string;
  type?: 'website' | 'article';
  publishedTime?: string;
  tags?: string[];
};
const ogImagePath = image ?? '/home-og-image.jpeg';
const ogImage = Astro.site
  ? new URL(ogImagePath, Astro.site).href
  : ogImagePath;
---

<!doctype html>
<html lang='en'>
	<head>
		<BaseHead title={title} description={description} image={ogImage} type={type} publishedTime={publishedTime} tags={tags} />
		<slot name="head" />
		<link rel='sitemap' href='/sitemap-index.xml' />
	</head>

        <body>
                <Header />
                <main id="main-content" class='px-6 md:px-10 mx-auto pt-28 mb-12 max-w-screen-lg md:max-w-screen-xl'>
                        <slot />
                </main>
                <Footer />
                <ScrollTop />
                <script>
                  // Reveal-on-scroll for elements with `.reveal` class
                  const io = new IntersectionObserver(
                    (entries) => {
                      for (const e of entries) {
                        if (e.isIntersecting) e.target.classList.add('reveal-visible');
                      }
                    },
                    { rootMargin: '0px 0px -10% 0px', threshold: 0.1 }
                  );
                  for (const el of document.querySelectorAll('.reveal')) io.observe(el);
                </script>
        </body>
</html>
