---
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import talks from '../content/talks/talks.json';
import publications from '../content/publications/publications.json';
import HeroSection from '../components/sections/HeroSection.astro';
import { getImage } from 'astro:assets';
import profileImage from '../assets/images/profile.jpg';
import AboutSection from '../components/sections/AboutSection.astro';
import StatsSection from '../components/sections/StatsSection.astro';
import BlogSection from '../components/sections/BlogSection.astro';

const allPosts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const posts = allPosts.slice(0, 3);
const stats = {
  posts: allPosts.length,
  publications: publications.length,
  talks: talks.length,
};
// Precompute hero image variants to enable accurate preload with imagesrcset
const heroW192 = await getImage({ src: profileImage, width: 192, format: 'webp' });
const heroW224 = await getImage({ src: profileImage, width: 224, format: 'webp' });
const heroW384 = await getImage({ src: profileImage, width: 384, format: 'webp' });
const heroW448 = await getImage({ src: profileImage, width: 448, format: 'webp' });
---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <div class="landing-background" aria-hidden="true">
    <div class="landing-background__gradient"></div>
    <div class="landing-background__particles"></div>
  </div>
  {/* Preload likely LCP image for GitHub Pages to shorten the chain */}
  {
    heroW384 && (
      <Fragment slot="head">
        <link
          rel="preload"
          as="image"
          fetchpriority="high"
          href={heroW384.src}
          imagesrcset={`${heroW192.src} 192w, ${heroW224.src} 224w, ${heroW384.src} 384w, ${heroW448.src} 448w`}
          imagesizes="(min-width: 768px) 14rem, 12rem"
        />
      </Fragment>
    )
  }
  <HeroSection />
  <AboutSection />
  <StatsSection stats={stats} />
  <BlogSection posts={posts} />
</BaseLayout>

<style>
  .landing-background {
    position: fixed;
    inset: 0;
    z-index: -2;
    overflow: hidden;
    background:
      radial-gradient(circle at top left, rgba(15, 23, 42, 0.82), transparent 55%),
      radial-gradient(circle at bottom right, rgba(30, 41, 59, 0.75), transparent 60%),
      rgba(10, 15, 28, 0.86);
  }

  .landing-background__gradient {
    position: absolute;
    inset: -20%;
    background: conic-gradient(
      from 120deg at 50% 50%,
      rgba(59, 130, 246, 0.24),
      rgba(129, 140, 248, 0.18),
      rgba(236, 72, 153, 0.14),
      rgba(59, 130, 246, 0.24)
    );
    filter: blur(140px);
    opacity: 0.8;
    animation: landing-gradient-spin 36s linear infinite;
  }

  .landing-background__particles {
    position: absolute;
    inset: -10% -10% -5% -10%;
    background-image:
      radial-gradient(2px 2px at 15% 20%, rgba(255, 255, 255, 0.16), transparent 70%),
      radial-gradient(1.5px 1.5px at 65% 35%, rgba(125, 211, 252, 0.2), transparent 70%),
      radial-gradient(1.75px 1.75px at 35% 70%, rgba(129, 140, 248, 0.18), transparent 70%),
      radial-gradient(1.25px 1.25px at 80% 65%, rgba(244, 114, 182, 0.16), transparent 70%);
    background-size: 32rem 32rem;
    mix-blend-mode: screen;
    opacity: 0.65;
    animation: landing-particles-move 26s ease-in-out infinite alternate;
  }

  @keyframes landing-gradient-spin {
    from {
      transform: rotate(0deg) scale(1);
    }
    to {
      transform: rotate(360deg) scale(1.05);
    }
  }

  @keyframes landing-particles-move {
    0% {
      transform: translate3d(-3%, -3%, 0) scale(1);
    }
    50% {
      transform: translate3d(2%, 4%, 0) scale(1.05);
    }
    100% {
      transform: translate3d(6%, -2%, 0) scale(1.08);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .landing-background__gradient,
    .landing-background__particles {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transform: none !important;
    }
  }
</style>
