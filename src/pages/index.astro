---
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import talks from '../content/talks/talks.json';
import publications from '../content/publications/publications.json';
import HeroSection from '../components/HeroSection.astro';
import { getImage } from 'astro:assets';
import profileImage from '../assets/images/profile.jpg';
import AboutSection from '../components/AboutSection.astro';
import StatsSection from '../components/StatsSection.astro';
import BlogSection from '../components/BlogSection.astro';

const allPosts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const posts = allPosts.slice(0, 3);
const stats = {
	posts: allPosts.length,
	publications: publications.length,
	talks: talks.length,
};
// Precompute hero image variants to enable accurate preload with imagesrcset
const heroW192 = await getImage({ src: profileImage, width: 192, format: 'webp' });
const heroW224 = await getImage({ src: profileImage, width: 224, format: 'webp' });
const heroW384 = await getImage({ src: profileImage, width: 384, format: 'webp' });
const heroW448 = await getImage({ src: profileImage, width: 448, format: 'webp' });
---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  { /* Preload likely LCP image for GitHub Pages to shorten the chain */ }
  {heroW384 && (
    <Fragment slot="head">
      <link
        rel="preload"
        as="image"
        fetchpriority="high"
        href={heroW384.src}
        imagesrcset={`${heroW192.src} 192w, ${heroW224.src} 224w, ${heroW384.src} 384w, ${heroW448.src} 448w`}
        imagesizes="(min-width: 768px) 14rem, 12rem"
      />
    </Fragment>
  )}
	<HeroSection />
	<AboutSection />
	<StatsSection stats={stats} />
	<BlogSection posts={posts} />
</BaseLayout>
