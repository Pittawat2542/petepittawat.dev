---
import { getCollection } from 'astro:content';
import PageWithHero from '../../layouts/PageWithHero.astro';
import BlogListPage from '../../components/layout/BlogListPage';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import type { BlogPost } from '../../types';
import { createTagSlugMap } from '../../lib/slug';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const allTags = Array.from(new Set(posts.flatMap(p => p.data.tags)));
  const map = createTagSlugMap(allTags);
  return Object.keys(map).map(slug => ({ params: { tag: slug } }));
}

const params = Astro.params as { tag: string };
const allPosts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
) as BlogPost[];
const allTags = ['All', ...Array.from(new Set(allPosts.flatMap(p => p.data.tags))).sort()];

const map = createTagSlugMap(allTags.filter(t => t !== 'All'));
const selectedTag = map[params.tag] ?? params.tag;
const filtered = allPosts.filter(p => p.data.tags.includes(selectedTag));
---

<PageWithHero
  title={`${SITE_TITLE} - #${selectedTag}`}
  description={SITE_DESCRIPTION}
  hero={{
    title: `#${selectedTag}`,
    subtitle: `Posts tagged with “${selectedTag}”.`,
    page: 'blog',
  }}
>
  <div class="mb-4">
    <a href="/tags" class="link-underline">← All tags</a>
  </div>
  <BlogListPage client:visible posts={filtered} tags={allTags} initialTags={[selectedTag]} />

  <!-- SR summary for quick context -->
  <p class="sr-only">{filtered.length} posts found for tag {selectedTag}.</p>
</PageWithHero>
